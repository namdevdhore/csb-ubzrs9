{"version":3,"sources":["Component/Component2/DatFor.js","Component/popup.js","App.js","index.js"],"names":["DatFor","useState","firstName","setFirstName","lastName","setLastName","gender","setGender","age","setAge","accountname","setAccountName","city","setCity","state","setState","className","style","display","flexDirection","alignItems","justifyContent","placeholder","onChange","e","target","value","label","map","val","index","Popup","props","trigger","onClick","setCloseTrigger","children","App","setTrigger","rootElement","document","getElementById","createRoot","render"],"mappings":"wKAEe,SAASA,IACtB,IA+BA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsBN,mBAAS,IAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAA0BZ,mBAAS,IAAnC,mBAAOa,EAAP,KAAcC,EAAd,KA2BA,OACE,sBAAKC,UAAU,MAAf,UACE,sBACEC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UALpB,UAQiB,eAAdnB,EAA6B,uBAAOoB,YAAY,eAAkB,GACrD,cAAblB,EAA2B,uBAAOkB,YAAY,cAAiB,GACpD,WAAXhB,EAAsB,uBAAOgB,YAAY,WAAc,GAC/C,QAARd,EAAgB,uBAAOc,YAAY,QAAW,GAC9B,iBAAhBZ,EACC,uBAAOY,YAAY,iBAEnB,GAEQ,SAATV,EAAkB,uBAAOU,YAAY,SAAY,GACvC,UAAVR,EAAoB,uBAAOQ,YAAY,UAAa,MAGvD,yBAAQC,SAhDS,SAACC,GAEG,eAAnBA,EAAEC,OAAOC,OACXvB,EAAaqB,EAAEC,OAAOC,OAED,cAAnBF,EAAEC,OAAOC,OACXrB,EAAYmB,EAAEC,OAAOC,OAEA,WAAnBF,EAAEC,OAAOC,OACXnB,EAAUiB,EAAEC,OAAOC,OAEE,QAAnBF,EAAEC,OAAOC,OACXjB,EAAOe,EAAEC,OAAOC,OAEK,iBAAnBF,EAAEC,OAAOC,OACXf,EAAea,EAAEC,OAAOC,OAEH,SAAnBF,EAAEC,OAAOC,OACXb,EAAQW,EAAEC,OAAOC,OAEI,UAAnBF,EAAEC,OAAOC,OACXX,EAASS,EAAEC,OAAOC,QA2BlB,UACE,2DAxFO,CACX,CACEC,MAAO,aACPD,MAAO,cAET,CACEC,MAAO,YACPD,MAAO,aAET,CACEC,MAAO,SACPD,MAAO,UAET,CACEC,MAAO,MACPD,MAAO,OAET,CACEC,MAAO,eACPD,MAAO,gBAET,CACEC,MAAO,OACPD,MAAO,QAET,CACEC,MAAO,QACPD,MAAO,UA8DCE,KAAI,SAACC,EAAKC,GAAN,OACR,wBAAwCJ,MAAOG,EAAIH,MAAnD,SACGG,EAAIF,OADP,UAAgBG,EAAhB,cAA2BD,EAAIH,cAKnC,0BChESK,MA9Bf,SAAeC,GACb,OAAOA,EAAMC,QACX,qBAAKjB,UAAU,QAAf,SACE,sBAAKA,UAAU,cAAf,UACE,wBACEA,UAAU,UACVkB,QAAS,kBAAMF,EAAMG,iBAAgB,IAFvC,mBAMCH,EAAMI,SACP,oBAAIpB,UAAU,UAAd,0BACA,uBACA,kEAEE,uBACA,6BAEF,uBACA,yGAGA,cAAChB,EAAD,SAIJ,IC1BW,SAASqC,IACtB,MAA8BpC,oBAAS,GAAvC,mBAAOgC,EAAP,KAAgBK,EAAhB,KAEA,OACE,sBAAKtB,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,2BACA,wBAAQkB,QAAS,kBAAMI,GAAW,IAAlC,0BACA,cAAC,EAAD,CAAOL,QAASA,EAASE,gBAAiBG,OCNhD,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACN,EAAD,Q","file":"static/js/main.4390c3a0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n// import \"./styles.css\";\r\nexport default function DatFor() {\r\n  const opti = [\r\n    {\r\n      label: \"First Name\",\r\n      value: \"first_name\"\r\n    },\r\n    {\r\n      label: \"Last Name\",\r\n      value: \"last_name\"\r\n    },\r\n    {\r\n      label: \"Gender\",\r\n      value: \"gender\"\r\n    },\r\n    {\r\n      label: \"Age\",\r\n      value: \"age\"\r\n    },\r\n    {\r\n      label: \"Account Name\",\r\n      value: \"account_name\"\r\n    },\r\n    {\r\n      label: \"City\",\r\n      value: \"city\"\r\n    },\r\n    {\r\n      label: \"State\",\r\n      value: \"state\"\r\n    }\r\n  ];\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [accountname, setAccountName] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    // console.log(\"Fruit Selected!!\");\r\n    if (e.target.value === \"first_name\") {\r\n      setFirstName(e.target.value);\r\n    }\r\n    if (e.target.value === \"last_name\") {\r\n      setLastName(e.target.value);\r\n    }\r\n    if (e.target.value === \"gender\") {\r\n      setGender(e.target.value);\r\n    }\r\n    if (e.target.value === \"age\") {\r\n      setAge(e.target.value);\r\n    }\r\n    if (e.target.value === \"account_name\") {\r\n      setAccountName(e.target.value);\r\n    }\r\n    if (e.target.value === \"city\") {\r\n      setCity(e.target.value);\r\n    }\r\n    if (e.target.value === \"state\") {\r\n      setState(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        {firstName === \"first_name\" ? <input placeholder=\"First Name\" /> : \"\"}\r\n        {lastName === \"last_name\" ? <input placeholder=\"Last Name\" /> : \"\"}\r\n        {gender === \"gender\" ? <input placeholder=\"Gender\" /> : \"\"}\r\n        {age === \"age\" ? <input placeholder=\"Age\" /> : \"\"}\r\n        {accountname === \"account_name\" ? (\r\n          <input placeholder=\"Account Name\" />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {city === \"city\" ? <input placeholder=\"City\" /> : \"\"}\r\n        {state === \"state\" ? <input placeholder=\"State\" /> : \"\"}\r\n      </div>\r\n\r\n      <select onChange={handleChange}>\r\n        <option>Add schema to segment</option>\r\n        {opti.map((val, index) => (\r\n          <option key={`${index} + ${val.value}`} value={val.value}>\r\n            {val.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      {/* <input placeholder=\"Add schema to segment\" /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./popup.css\";\r\nimport \"../styles.css\";\r\nimport DatFor from \"./Component2/DatFor.js\";\r\nfunction Popup(props) {\r\n  return props.trigger ? (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-inner\">\r\n        <button\r\n          className=\"clo-btn\"\r\n          onClick={() => props.setCloseTrigger(false)}\r\n        >\r\n          Close\r\n        </button>\r\n        {props.children}\r\n        <h1 className=\"heading\">Save segment</h1>\r\n        <br />\r\n        <label>\r\n          Enter the name of the segment\r\n          <br />\r\n          <input></input>\r\n        </label>\r\n        <br />\r\n        <span>\r\n          To save your segment, you need to add the schemas to build the query.\r\n        </span>\r\n        <DatFor />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","import \"./styles.css\";\nimport Popup from \"./Component/popup\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  const [trigger, setTrigger] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">View Audience</h1>\n      <button onClick={() => setTrigger(true)}>Save Segment</button>\n      <Popup trigger={trigger} setCloseTrigger={setTrigger}></Popup>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}